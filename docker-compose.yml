services:

  postgres:
    image: postgres:14.1
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

#  app:
#    image: my-quarkus-app:latest
#    build:
#      context: .
#      dockerfile: src/main/docker/Dockerfile.runner.native-micro
#    environment:
#      QUARKUS_DATASOURCE_DB_KIND: postgresql
#      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres:5432/mydatabase
#      QUARKUS_DATASOURCE_USERNAME: myuser
#      QUARKUS_DATASOURCE_PASSWORD: mypassword
#      QUARKUS_HIBERNATE_ORM_DATABASE_GENERATION: drop-and-create
#    ports:
#      - "8080:8080"
#    depends_on:
#      - postgres

##############################

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - monitoring

  blackbox:
    image: prom/blackbox-exporter:latest
    container_name: blackbox-exporter
    ports:
      - "9115:9115"
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - monitoring

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbit
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin



networks:
  monitoring:

volumes:
  postgres_data:
  grafana-data: